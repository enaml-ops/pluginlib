// This file was generated by counterfeiter
package cloudconfigv1fakes

import (
	"sync"

	"github.com/enaml-ops/pluginlib/cloudconfigv1"
	"github.com/enaml-ops/pluginlib/pcli"
)

type FakeDeployer struct {
	GetMetaStub        func() cloudconfig.Meta
	getMetaMutex       sync.RWMutex
	getMetaArgsForCall []struct{}
	getMetaReturns     struct {
		result1 cloudconfig.Meta
	}
	GetFlagsStub        func() []pcli.Flag
	getFlagsMutex       sync.RWMutex
	getFlagsArgsForCall []struct{}
	getFlagsReturns     struct {
		result1 []pcli.Flag
	}
	GetCloudConfigStub        func(args []string) ([]byte, error)
	getCloudConfigMutex       sync.RWMutex
	getCloudConfigArgsForCall []struct {
		args []string
	}
	getCloudConfigReturns struct {
		result1 []byte
		result2 error
	}
}

func (fake *FakeDeployer) GetMeta() cloudconfig.Meta {
	fake.getMetaMutex.Lock()
	fake.getMetaArgsForCall = append(fake.getMetaArgsForCall, struct{}{})
	fake.getMetaMutex.Unlock()
	if fake.GetMetaStub != nil {
		return fake.GetMetaStub()
	} else {
		return fake.getMetaReturns.result1
	}
}

func (fake *FakeDeployer) GetMetaCallCount() int {
	fake.getMetaMutex.RLock()
	defer fake.getMetaMutex.RUnlock()
	return len(fake.getMetaArgsForCall)
}

func (fake *FakeDeployer) GetMetaReturns(result1 cloudconfig.Meta) {
	fake.GetMetaStub = nil
	fake.getMetaReturns = struct {
		result1 cloudconfig.Meta
	}{result1}
}

func (fake *FakeDeployer) GetFlags() []pcli.Flag {
	fake.getFlagsMutex.Lock()
	fake.getFlagsArgsForCall = append(fake.getFlagsArgsForCall, struct{}{})
	fake.getFlagsMutex.Unlock()
	if fake.GetFlagsStub != nil {
		return fake.GetFlagsStub()
	} else {
		return fake.getFlagsReturns.result1
	}
}

func (fake *FakeDeployer) GetFlagsCallCount() int {
	fake.getFlagsMutex.RLock()
	defer fake.getFlagsMutex.RUnlock()
	return len(fake.getFlagsArgsForCall)
}

func (fake *FakeDeployer) GetFlagsReturns(result1 []pcli.Flag) {
	fake.GetFlagsStub = nil
	fake.getFlagsReturns = struct {
		result1 []pcli.Flag
	}{result1}
}

func (fake *FakeDeployer) GetCloudConfig(args []string) ([]byte, error) {
	fake.getCloudConfigMutex.Lock()
	fake.getCloudConfigArgsForCall = append(fake.getCloudConfigArgsForCall, struct {
		args []string
	}{args})
	fake.getCloudConfigMutex.Unlock()
	if fake.GetCloudConfigStub != nil {
		return fake.GetCloudConfigStub(args)
	} else {
		return fake.getCloudConfigReturns.result1, fake.getCloudConfigReturns.result2
	}
}

func (fake *FakeDeployer) GetCloudConfigCallCount() int {
	fake.getCloudConfigMutex.RLock()
	defer fake.getCloudConfigMutex.RUnlock()
	return len(fake.getCloudConfigArgsForCall)
}

func (fake *FakeDeployer) GetCloudConfigArgsForCall(i int) []string {
	fake.getCloudConfigMutex.RLock()
	defer fake.getCloudConfigMutex.RUnlock()
	return fake.getCloudConfigArgsForCall[i].args
}

func (fake *FakeDeployer) GetCloudConfigReturns(result1 []byte, result2 error) {
	fake.GetCloudConfigStub = nil
	fake.getCloudConfigReturns = struct {
		result1 []byte
		result2 error
	}{result1, result2}
}

var _ cloudconfig.Deployer = new(FakeDeployer)
